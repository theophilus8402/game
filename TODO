
function                                   written         tested      documented
-------------------------------------------------------------------------------------
model.entity.status_effects.add_status_effect         x           x               x
model.entity.status_effects.remove_status_effect      x           x               x
model.entity.status_effects.check_health           x           x               x
model.tile.add_entity                           x           x               x
model.tile.remove_entity                        x           x               x
x move model.entity.affs to model.entity.status_effects
x move model.entity.entity status msgs to model.entity.status_effects
x change entity to keep track of status_effects
model.world.distance_between_coords             x               x               x

_ clean up a lot of the old structures... get rid of junk
x clean up the tests in test/control/test_socks.py
_ test the "new" way of handling entities and how to interact with them
x integrate map3.py stuff into the game (see who's nearby)
_ document/test all the ai stuff
_ implement a way for the ai to detect if he's been hit and to try to kill the attacker
_ make it so each entity is outputing stuff to it's own file, that would make reading
    easier


model.world.get_tile                            x           x               x
model.world.move_entity                         x           x               x
    model.world.move_check_nearby_entities      x           x               x
        model.tile.check_tile_new_entity        x           x               x
        model.world.check_entities_out_of_range x           x               x
    model.world.area_entity_check               x           x               x

model.util.roll (moved it)                      x           x               x
model.tile.get_symbol                           x           x               x

x re-implement ai's input/output using os.pipe

moved model.world.distance_between_coords to model.util.distance_between_coords
fixed some of control.entity.living.action_hit to better use model.info.Status
got rid of entity.cur_loc and changed it to entity.coord
moved control/admin.py to ../bak_game/control/admin
moved all the db stuff to ../bak_game as well
got rid of a bunch of stuff in model.world
moved a bunch of the control.sockets like things to ../bak_game/control/socks.py

function                                   written         tested      documented
-------------------------------------------------------------------------------------
model.world.find_entity                         x           _               _
control.comm.*
    Communication                               _           _               _
    Std_IO                                      x           x               x
    Std_IO.send                                 x           x               x
    Std_IO.recv                                 x           x               x
    AI_IO                                       x           x               x
    AI_IO.send                                  x           x               x
    AI_IO.read_from_server                      x           x               x
    AI_IO.send_msg_to_server                    x           x               x
    AI_IO.recv                                  x           x               x
control.mymap.display_map                       x           _               _
control.entity.ai.*
    simple_get_next_cmd                         x           _               _
    simple_set_next_run_time                    x           _               _
    simple_run                                  x           _               _
    Simple_AI                                   x           _               _
control.entity.living.*
    get_input_from_entities                     x           _               _
    handle_action_msgs                          x           _               _
    run_ai                                      x           _               _
    default_action                              x           _               _
    action_move                                 x           _               _
    action_look                                 x           _               _
    action_hit                                  x           x               _
    action_say                                  x           x               _

To Clean-up/Look at:
model.entity.living.*
    add_status_msg
    remove_status_msg
    get_attack_bonus
    check_successful_attack
    determine_weapon_dmg

!!! For control.entity.living.send_msg !!!
    x   might start something in view
    x   in stead of setting the messages in control, make them in view
           for example, view.msgs.Msg.action_say_to
    have view determine if the entity is a peep or an AI, give different msgs
    munge the words if the sayer is drunk/drugged or is speaking a different language
    ok, view is going to get the information about the msg
        x   it will look at the information pertaining to the entity/entities
        x   generate msgs as appropriate
        x   then return a list of tuples (entity, msg) msg is the exact msg to send
            to the entity
        x   it will not make any changes to anything
        x   it will not send any msgs to any entities

!!! implement logging (like system debug stuff !!!


clean up the way we format msgs (view.msgs)... might be able to combine a lot of stuff
clean up control.entity.living.action_move
    have it send msgs to nearby peeps about moving
control.entity.living.action_get
control.entity.living.action_wield



x rename model.tile.add_entity and remove_entity to tile_add_entity tile_remove entity
x re-organize model.entity
    x split up the giant that is model.entity.entity
    x create model/entity/living folder
    x move some stuff in control/entity/living.py to model/entity/living/*
    x make model/entity/basic.py
    x make model/entity/weapons.py armour.py
x document/test model.entity.inventory
_ control.entity.living.action_drop
    _ implement
    _ document
    _ test
_ model.entity.living.equip
    _ implement
    _ document
    _ test
_ control.entity.living.action_equip
    _ implement
    _ document
    _ test
